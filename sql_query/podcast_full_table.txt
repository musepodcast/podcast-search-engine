-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.channels
(
    id serial NOT NULL,
    channel_title text COLLATE pg_catalog."default" NOT NULL,
    sanitized_channel_title text COLLATE pg_catalog."default" NOT NULL,
    channel_image_url text COLLATE pg_catalog."default",
    channel_author text COLLATE pg_catalog."default",
    channel_summary text COLLATE pg_catalog."default",
    CONSTRAINT channels_pkey PRIMARY KEY (id),
    CONSTRAINT channels_channel_title_key UNIQUE (channel_title)
);

CREATE TABLE IF NOT EXISTS public.episodes
(
    id serial NOT NULL,
    channel_id integer,
    episode_title text COLLATE pg_catalog."default" NOT NULL,
    sanitized_episode_title text COLLATE pg_catalog."default" NOT NULL,
    publication_date timestamp without time zone,
    duration text COLLATE pg_catalog."default",
    episode_number integer,
    explicit boolean,
    guid text COLLATE pg_catalog."default" NOT NULL,
    audio_url text COLLATE pg_catalog."default",
    image_url text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    tsv_transcript tsvector,
    transcript text COLLATE pg_catalog."default",
    link text COLLATE pg_catalog."default",
    categories jsonb,
    language character varying(50) COLLATE pg_catalog."default",
    translated boolean DEFAULT false,
    CONSTRAINT episodes_pkey PRIMARY KEY (id),
    CONSTRAINT episodes_guid_key UNIQUE (guid),
    CONSTRAINT unique_channel_episode UNIQUE (channel_id, episode_title)
);

CREATE TABLE IF NOT EXISTS public.transcripts
(
    id serial NOT NULL,
    episode_id integer,
    segment_time text COLLATE pg_catalog."default" NOT NULL,
    segment_text text COLLATE pg_catalog."default" NOT NULL,
    speaker character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT transcripts_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chapters
(
    id serial NOT NULL,
    episode_id integer,
    chapter_title text COLLATE pg_catalog."default" NOT NULL,
    chapter_time character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT chapters_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.episodestranslations
(
    id serial NOT NULL,
    episode_id integer,
    episode_title text COLLATE pg_catalog."default",
    sanitized_episode_title text COLLATE pg_catalog."default",
    publication_date timestamp without time zone,
    duration text COLLATE pg_catalog."default",
    episode_number integer,
    explicit boolean,
    guid text COLLATE pg_catalog."default",
    audio_url text COLLATE pg_catalog."default",
    image_url text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    categories jsonb,
    language text COLLATE pg_catalog."default",
    link text COLLATE pg_catalog."default",
    transcript text COLLATE pg_catalog."default",
    tsv_transcript tsvector,
    translated boolean DEFAULT true,
    CONSTRAINT episodestranslations_pkey PRIMARY KEY (id),
    CONSTRAINT episodestranslations_episode_id_language_key UNIQUE (episode_id, language)
);

CREATE TABLE IF NOT EXISTS public.chapterstranslations
(
    id serial NOT NULL,
    episode_id integer,
    chapter_title text COLLATE pg_catalog."default",
    chapter_time text COLLATE pg_catalog."default",
    language text COLLATE pg_catalog."default",
    CONSTRAINT chapterstranslations_pkey PRIMARY KEY (id),
    CONSTRAINT chapterstranslations_episode_id_chapter_title_language_key UNIQUE (episode_id, chapter_title, language)
);

CREATE TABLE IF NOT EXISTS public.transcriptstranslations
(
    id serial NOT NULL,
    episode_id integer,
    segment_time text COLLATE pg_catalog."default",
    segment_text text COLLATE pg_catalog."default",
    speaker text COLLATE pg_catalog."default",
    language text COLLATE pg_catalog."default",
    CONSTRAINT transcriptstranslations_pkey PRIMARY KEY (id),
    CONSTRAINT transcriptstranslations_episode_id_segment_time_language_key UNIQUE (episode_id, segment_time, language)
);

CREATE TABLE IF NOT EXISTS public.channelstranslations
(
    id serial NOT NULL,
    channel_id integer,
    channel_title text COLLATE pg_catalog."default",
    sanitized_channel_title text COLLATE pg_catalog."default",
    channel_image_url text COLLATE pg_catalog."default",
    channel_author text COLLATE pg_catalog."default",
    channel_summary text COLLATE pg_catalog."default",
    language text COLLATE pg_catalog."default",
    translated boolean DEFAULT true,
    CONSTRAINT channelstranslations_pkey PRIMARY KEY (id),
    CONSTRAINT channelstranslations_channel_id_language_key UNIQUE (channel_id, language)
);

ALTER TABLE IF EXISTS public.episodes
    ADD CONSTRAINT episodes_channel_id_fkey FOREIGN KEY (channel_id)
    REFERENCES public.channels (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transcripts
    ADD CONSTRAINT transcripts_episode_id_fkey FOREIGN KEY (episode_id)
    REFERENCES public.episodes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_transcripts_episode_id
    ON public.transcripts(episode_id);


ALTER TABLE IF EXISTS public.chapters
    ADD CONSTRAINT chapters_episode_id_fkey FOREIGN KEY (episode_id)
    REFERENCES public.episodes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.episodestranslations
    ADD CONSTRAINT episodestranslations_episode_id_fkey FOREIGN KEY (episode_id)
    REFERENCES public.episodes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.chapterstranslations
    ADD CONSTRAINT chapterstranslations_episode_id_fkey FOREIGN KEY (episode_id)
    REFERENCES public.episodes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.transcriptstranslations
    ADD CONSTRAINT transcriptstranslations_episode_id_fkey FOREIGN KEY (episode_id)
    REFERENCES public.episodes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.channelstranslations
    ADD CONSTRAINT channelstranslations_channel_id_fkey FOREIGN KEY (channel_id)
    REFERENCES public.channels (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;